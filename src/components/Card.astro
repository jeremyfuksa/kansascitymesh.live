---
interface Props {
  title: string;
  description?: string;
  link?: string;
  linkText?: string;
  status?: "operational" | "gap" | "needed" | "suggested";
}

const { title, description, link, linkText, status } = Astro.props;

const statusMap: Record<string, { label: string; variant: string }> = {
  operational: { label: "LIVE", variant: "success" },
  gap: { label: "GAP", variant: "warning" },
  needed: { label: "NEEDED", variant: "secondary" },
  suggested: { label: "SUGGESTED", variant: "info" },
};

const badge = status ? statusMap[status] ?? null : null;
---

<div class="col">
  <div class="card h-100 shadow-sm border-0">
    <div class="card-body d-flex flex-column gap-3">
      <div class="d-flex justify-content-between align-items-start gap-3">
        <h3 class="h5 fw-semibold mb-0">{title}</h3>
        {badge && (
          <span class={`badge text-bg-${badge.variant}`}>{badge.label}</span>
        )}
      </div>
      {description && <p class="card-text text-body-secondary mb-0">{description}</p>}
      {link && linkText && (
        <div class="mt-auto">
          <a
            href={link}
            class="link-primary fw-semibold"
            target={link.startsWith("/") ? undefined : "_blank"}
            rel={link.startsWith("/") ? undefined : "noopener noreferrer"}
          >
            {linkText}
          </a>
        </div>
      )}
    </div>
  </div>
</div>
