---
type Variant = "info" | "warning" | "success";

interface Props {
  message: string;
  link?: string;
  linkText?: string;
  variant?: Variant;
}

const { message, link, linkText, variant = "info" } = Astro.props;

const variantClasses: Record<Variant, string> = {
  info: "alert-info border-info-subtle text-info-emphasis",
  warning: "alert-warning border-warning-subtle text-warning-emphasis",
  success: "alert-success border-success-subtle text-success-emphasis",
};

const iconClasses: Record<Variant, string> = {
  info: "fa-circle-info",
  warning: "fa-triangle-exclamation",
  success: "fa-circle-check",
};
---

<div class={`alert d-flex align-items-start gap-3 ${variantClasses[variant]}`} role="alert">
  <span class="fs-4"><i class={`fa-solid ${iconClasses[variant]}`} aria-hidden="true"></i></span>
  <div>
    <p class="fw-semibold mb-1">{message}</p>
    {
      link && (
        <a
          href={link}
          class="fw-semibold link-primary"
          rel="noopener noreferrer"
          target={link.startsWith("/") ? undefined : "_blank"}
        >
          {linkText ?? link}
        </a>
      )
    }
  </div>
</div>
